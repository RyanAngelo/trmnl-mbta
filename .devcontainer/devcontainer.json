{
    "name": "TRMNL MBTA Development",
    "dockerComposeFile": "docker-compose.yml",
    "service": "app",
    "workspaceFolder": "/workspace",
    // Features to install
    "features": {
        "ghcr.io/devcontainers/features/git:1": {},
        "ghcr.io/devcontainers/features/github-cli:1": {},
        "ghcr.io/devcontainers/features/docker-in-docker:2": {}
    },
    // VS Code settings
    "customizations": {
        "vscode": {
            "settings": {
                "python.defaultInterpreterPath": "/usr/local/bin/python",
                "python.linting.enabled": true,
                "python.linting.pylintEnabled": false,
                "python.linting.flake8Enabled": true,
                "python.linting.banditEnabled": true,
                "python.formatting.provider": "black",
                "python.formatting.blackArgs": [
                    "--line-length",
                    "100"
                ],
                "python.sortImports.args": [
                    "--profile",
                    "black"
                ],
                "python.testing.pytestEnabled": true,
                "python.testing.unittestEnabled": false,
                "python.testing.pytestArgs": [
                    "tests"
                ],
                "editor.formatOnSave": true,
                "editor.codeActionsOnSave": {
                    "source.organizeImports": true
                },
                "files.exclude": {
                    "**/__pycache__": true,
                    "**/*.pyc": true,
                    "**/.pytest_cache": true,
                    "**/.mypy_cache": true
                }
            },
            // Extensions to install
            "extensions": [
                "ms-python.python",
                "ms-python.flake8",
                "ms-python.black-formatter",
                "ms-python.isort",
                "ms-toolsai.jupyter",
                "ms-vscode.test-adapter-converter",
                "ms-python.pytest",
                "ms-azuretools.vscode-docker",
                "bradlc.vscode-tailwindcss",
                "esbenp.prettier-vscode",
                "ms-vscode.vscode-json",
                "redhat.vscode-yaml",
                "ms-vscode.makefile-tools",
                "GitHub.copilot",
                "GitHub.copilot-chat",
                "ms-vscode.remote-containers"
            ]
        }
    },
    // Ports to forward (if needed for future development)
    "forwardPorts": [],
    "portsAttributes": {},
    // Post-create commands
    "postCreateCommand": "pip install -e '.[dev]' && pre-commit install",
    // Commands to run when starting the container
    "postStartCommand": "echo 'ðŸš€ TRMNL MBTA development environment ready!'",
    // Mount the Docker socket for docker-in-docker
    "mounts": [
        "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
    ],
    // Environment variables for development
    "containerEnv": {
        "DEBUG_MODE": "true",
        "PYTHONPATH": "/workspace/src"
    },
    // Run as non-root user
    "remoteUser": "vscode"
}